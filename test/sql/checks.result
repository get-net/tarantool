env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd("push filter ".."'\\.lua.*:[0-9]+: ' to '.lua...\"]:<line>: '")
---
- true
...
engine = test_run:get_cfg('engine')
---
...
box.sql.execute('pragma sql_default_engine=\''..engine..'\'')
---
...
--
-- gh-3272: Move SQL CHECK into server
--
-- Legacy data in _space (insertion on bootrap) test.
opts = {checks = {{expr = 'X>5'}}}
---
...
format = {{name = 'X', type = 'unsigned'}}
---
...
t = {513, 1, 'test', 'memtx', 0, opts, format}
---
...
s = box.space._space:insert(t)
---
...
box.space.test:create_index('pk')
---
- unique: true
  parts:
  - type: unsigned
    is_nullable: false
    fieldno: 1
  id: 0
  space_id: 513
  name: pk
  type: TREE
...
-- Invalid expression test.
box.space._ck_constraint:insert({'CK_CONSTRAINT_01', 513, 'X><5'})
---
- error: 'Failed to create check constraint ''CK_CONSTRAINT_01'': Syntax error near
    ''<'''
...
-- Unexistent space test.
box.space._ck_constraint:insert({'CK_CONSTRAINT_01', 550, 'X<5'})
---
- error: Space '550' does not exist
...
-- Field type test.
box.space._ck_constraint:insert({'CK_CONSTRAINT_01', 550, 666})
---
- error: 'Tuple field 3 type does not match one required by operation: expected string'
...
-- Check constraints LUA creation test.
box.space._ck_constraint:insert({'CK_CONSTRAINT_01', 513, 'X<5'})
---
- ['CK_CONSTRAINT_01', 513, 'X<5']
...
box.space._ck_constraint:count({})
---
- 1
...
box.sql.execute("INSERT INTO \"test\" VALUES(5);")
---
- error: 'Check constraint failed: CK_CONSTRAINT_01'
...
box.space.test:insert({5})
---
- error: 'Check constraint failed: CK_CONSTRAINT_01'
...
box.space._ck_constraint:replace({'CK_CONSTRAINT_01', 513, 'X<=5'})
---
- ['CK_CONSTRAINT_01', 513, 'X<=5']
...
box.sql.execute("INSERT INTO \"test\" VALUES(5);")
---
...
box.sql.execute("INSERT INTO \"test\" VALUES(6);")
---
- error: 'Check constraint failed: CK_CONSTRAINT_01'
...
box.space.test:insert({6})
---
- error: 'Check constraint failed: CK_CONSTRAINT_01'
...
-- Can't drop table with check constraints.
box.space.test:delete({5})
---
- [5]
...
box.space.test.index.pk:drop()
---
...
box.space._space:delete({513})
---
- error: 'Can''t drop space ''test'': the space has check constraints'
...
box.space._ck_constraint:delete({'CK_CONSTRAINT_01', 513})
---
- ['CK_CONSTRAINT_01', 513, 'X<=5']
...
box.space.test:drop()
---
...
-- Create table with checks in sql.
box.sql.execute("CREATE TABLE t1(x INTEGER CONSTRAINT ONE CHECK( x<5 ), y REAL CONSTRAINT TWO CHECK( y>x ), z INTEGER PRIMARY KEY);")
---
...
box.space._ck_constraint:count()
---
- 2
...
box.sql.execute("INSERT INTO t1 VALUES (7, 1, 1)")
---
- error: 'Check constraint failed: ONE'
...
box.space.T1:insert({7, 1, 1})
---
- error: 'Check constraint failed: ONE'
...
box.sql.execute("INSERT INTO t1 VALUES (2, 1, 1)")
---
- error: 'Check constraint failed: TWO'
...
box.space.T1:insert({2, 1, 1})
---
- error: 'Check constraint failed: TWO'
...
box.sql.execute("INSERT INTO t1 VALUES (2, 4, 1)")
---
...
box.space.T1:update({1}, {{'+', 1, 5}})
---
- error: 'Check constraint failed: ONE'
...
box.sql.execute("DROP TABLE t1")
---
...
--
-- gh-3611: Segfault on table creation with check referencing this table
--
box.sql.execute("CREATE TABLE w2 (s1 INT PRIMARY KEY, CHECK ((SELECT COUNT(*) FROM w2) = 0));")
---
- error: 'Failed to create check constraint ''CK_CONSTRAINT_1_W2'': subqueries prohibited
    in CHECK constraints'
...
box.sql.execute("DROP TABLE w2;")
---
- error: Space 'W2' does not exist
...
--
-- gh-3653: Dissallow bindings for DDL
--
box.sql.execute("CREATE TABLE t5(x INT PRIMARY KEY, y INT, CHECK( x*y < ? ));")
---
- error: 'Failed to create check constraint ''CK_CONSTRAINT_1_T5'': bindings are not
    allowed in DDL'
...
test_run:cmd("clear filter")
---
- true
...
